# default.custom.yaml
# encoding: utf-8

# default.yaml 是默认设置，主要控制快捷键、按键上屏等等

patch:

  switcher:
    caption: 〔方案选单〕
    hotkeys:
    - Control+grave

  schema_list:
    - {schema: luna_pinyin}
    - {schema: luna_pinyin_simp}
    - {schema: luna_pinyin_fluency}
    - {schema: pinyin_simp}

  menu/page_size: 4

  ascii_composer:
    good_old_caps_lock: true
    switch_key:
      Shift_L: commit_code
      Shift_R: commit_code
      Control_L: noop
      Control_R: noop
      Caps_Lock: noop
      Eisu_toggle: clear

  key_binder:
    bindings:
      #
      # 快捷键，更多参见 ori_default.yaml
      #
      - { when: has_menu, accept: minus, send: Page_Up }
      - { when: has_menu, accept: equal, send: Page_Down }
      - { when: always, accept: Shift+space, toggle: full_shape } # Shift+space 切换全角/半角
      # - { when: always, accept: Shift+space, toggle: noop } # 禁用 Shift+space 切换全角/半角
      #
      # paging
      #
      # - { when: has_menu, accept: comma, send: Page_Up }
      # - { when: has_menu, accept: period, send: Page_Down }
      #
      # more technical binding
      #
      # Emacs style
      # - { when: composing, accept: Control+p, send: Up }
      # - { when: composing, accept: Control+n, send: Down }
      # - { when: composing, accept: Control+b, send: Left }
      # - { when: composing, accept: Control+f, send: Right }
      # - { when: composing, accept: Control+a, send: Home }
      # - { when: composing, accept: Control+e, send: End }
      # - { when: composing, accept: Control+d, send: Delete }
      # - { when: composing, accept: Control+k, send: Shift+Delete }
      # - { when: composing, accept: Control+h, send: BackSpace }
      # - { when: composing, accept: Control+g, send: Escape }
      # - { when: composing, accept: Control+bracketleft, send: Escape }
      # - { when: composing, accept: Alt+v, send: Page_Up }
      # - { when: composing, accept: Control+v, send: Page_Down }
      # paging keys
      # - { when: composing, accept: ISO_Left_Tab, send: Page_Up }
      # - { when: composing, accept: Shift+Tab, send: Page_Up }
      # - { when: composing, accept: Tab, send: Page_Down }
      # - { when: has_menu, accept: minus, send: Page_Up }
      # - { when: has_menu, accept: equal, send: Page_Down }
      # - { when: paging, accept: comma, send: Page_Up }
      # - { when: has_menu, accept: period, send: Page_Down }
      # hotkey switch
      # - { when: always, accept: Control+Shift+1, select: .next }
      # - { when: always, accept: Control+Shift+2, toggle: ascii_mode }
      # - { when: always, accept: Control+Shift+3, toggle: full_shape }
      # - { when: always, accept: Control+Shift+4, toggle: simplification }
      # - { when: always, accept: Control+Shift+5, toggle: extended_charset }
      # - { when: always, accept: Control+Shift+exclam, select: .next }
      # - { when: always, accept: Control+Shift+at, toggle: ascii_mode }
      # - { when: always, accept: Control+Shift+numbersign, toggle: full_shape }
      # - { when: always, accept: Control+Shift+dollar, toggle: simplification }
      # - { when: always, accept: Control+Shift+percent, toggle: extended_charset }
      # - { when: always, accept: Shift+space, toggle: full_shape }
      # - { when: always, accept: Control+period, toggle: ascii_punct }
      #
      # tip: Win 自带 emoji 及更多符号键盘: Win 徽标键 + .（句点）显示表情符号及更多符号键盘；mac 自带 emoji 键盘: ⌃ + ⌘ + 空格键（control + command + space）显示表情符号键盘
      #

